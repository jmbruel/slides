= icon:graduation-cap[] Tutoriel ReqCycle
Jean-Michel Bruel -- bruel@irit.fr -- {localdate}
:icons: font
:experimental:
:status:
:version: 0.9
:lastversion: 0.9.1
:lastupdate: http://download.polarsys.org/reqcycle/core/updates/releases/0.9/Mars/reqcycle-updatesite-0.9.1/

:imagesdir: images
//:siteurl: http://jmbruel.github.io/teaching/MobileModeling.html
:siteurl: http://bit.ly/jmb-apsio
//--------------------- slides
ifdef::slides[]
:dzslides-style: tomorrow
//:dzslides-style: stormy, watermelon, tomorrow, truffle, statement, default
:dzslides-transition: fade
:dzslides-fonts: family=Yanone+Kaffeesatz:400,700,200,300&family=Cedarville+Cursive
//:dzslides-highlight: asciidoctor
:dzslides-highlight: monokai
:source-highlighter: highlightjs
:dzslides-status:
:topic: .topic
:intro: .topic.intro
:statement: .topic.statement
:incremental: .incremental
:source: .topic.source
:linkcss:
endif::slides[]
//--------------------- cours
ifndef::slides[]
:source-highlighter: highlight
:topic:
:intro:
:statement:
:incremental: %step
:source:
endif::slides[]


// ------------------------------------------ definitions
ifndef::definitions[]
include::../definitions.txt[]
endif::definitions[]
:androidicon: Android icon:android[]
:iosicon: http://www.apple.com/fr/ios/[iOS icon:apple[]]
:requirement: exigence
:requirements: exigences

/////
// ------------------------------------------ disclaimer
:numbered!:
[{intro}]
== Avant-propos

{siteurl}

ifdef::slides[== !]

Désolé...
[{incremental}]
- ...pour l'anglais (really?)
- ... de ne pas être un spécialiste d'{android}
- ... que vous soyez la 1ère promo à subir ce cours
- ...que ce cours arrive avant que vous sachiez développer en Android/Mobile
- ... que vous ayiez à bosser *sans ordi* ce matin! [detail]#(au moins 1h30!)#

/////

// ------------------------------------------ plan
:numbered!:
[{intro}]
== icon:book[] Plan
ifdef::slides[== !]

[{incremental}]
- <<infos>>
- <<Installation>>
- <<Preparation>>
- <<Import>>
- <<Glossaire>>

// ------------------------------------------
[[infos]]
[{intro}]
== Informations générales

Dernière version:: {lastversion}
Lien:: {lastupdate}

// ------------------------------------------
[[Installation]]
[{intro}]
== Étape 0 : Installation

image::reqcycle/{version}/version.png[width=80%]

// ------------------------------------------
[[Preparation]]
[{intro}]
== Étape 1 : Préparation

Le but de cette 1ère étape est de définir une <<classification>> des {requirements} :

- <<types>> : ...
- <<associatedattributes>> : ...
- <<scopes>>  : ... (levels)

Une fois cette <<classification>> effectuée il est possible :

- d'importer
- de créer des traces
- d'insérer des éléments dans la <<classification>>.

Le metamodèle des {requirements} est décrit sous la forme d'une
<<configuration>> définie dans les preferences ReqCycle :

. Ouvrir menu:ReqCycle[ReqCycle Preferences]
+
image::reqcycle/{version}/prefs.png[width=50%]
+
. Sélectionner menu:ReqCycle[Data Models Preferences]
+
image::reqcycle/{version}/metamodel1.png[width=80%]
+
[WARNING]
=======
Si vous n'avez pas ce sous-menu mais plutôt l'affichage <<bug,ci-dessous>>,
essayez d'installer la
http://download.polarsys.org/reqcycle/core/updates/releases/0.9/Mars/reqcycle-updatesite-0.9.1/[dernière version]
de ReqCycle.

icon:bolt[] image:reqcycle/{version}/bug.png[width=80%]
=======
+
. Créer un nouveau métamodèle d'{requirement} (e.g., `MyReqDataModel`)
en utilisant le bouton btn:[+], puis btn:[OK].
. Créer des <<types>> d'{requirement} en sélectionnant menu:ReqCycle[Data Models Preferences > Requirement Types Preferences]
(e.g., `Functionnal`, toujours avec le bouton btn:[+]).
+
image::reqcycle/{version}/reqtypes.png[width=80%]
+
. Définir des attributs pour ces <<types>> d'{requirements}.
Pour cela sélectionner le <<types,type>>, et créer un nouvel
attribut (e.g., `revision`, toujours avec le bouton btn:[+]).
+
image::reqcycle/{version}/reqtypesattr.png[width=80%]
+
NOTE: Il est possible de définir des types d'`Enum` qui peuvent ainsi
être utilisé pour les types d'attributs, mais il y a actuellement des
restrictions en terme d'import...
+
. Création des <<scopes>>

// ------------------------------------------
[[Import]]
[{intro}]
== Étape 2 : Import des exigences

. Ouvrir menu:File[New > Project... > General > Project]
. Press btn:[Next]
. Choose a name (e.g. `SystemRequirements`)
+
image::reqcycle/{version}/newProject.png[width=80%]
+

// ------------------------------------------ Glossaire
ifndef::glossaire[]
:glossaire:

[[Glossaire]]
[glossary]
== Glossaire et définition

//WARNING: Ces définitions ...

[[associatedattributes]]
=== associated attributes

blabla

[[configuration]]
=== configuration

[[classification]]
=== classification

permet...

[[scopes]]
=== scopes
blabla

[[types]]
=== types
blabla

endif::glossaire[]
